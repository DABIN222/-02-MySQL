use demo;
use mydb;

show tables;
desc usertb2;

show tables;
desc booktbl;

show tables;
desc emp2;
select * from emp2;

-- 테이블에 필드를 추가한다.
-- emp2 테이블에 연락처를 저장 할 필드 추가
		alter table emp2 add tel varchar(15);

-- 필드의 크기를 수정하기
-- job을 varchar(20)자리로 바꾸기
		alter table emp2 modify job varchar(20);
        
-- 컬럼명 변경하기
-- [ tel -> mobile ] 로 컬럼명 변경하기
		alter table emp2 change tel mobile varchar(20);

desc emp2;

-- 필드 삭제하기
-- job을 삭제하기
		alter table emp2 drop column job;
        
-- emp2테이블 지우기
		drop table emp2;
        show tables;
        
select * from emp;
delete from emp where empno in(1111,2222,3333);
commit;

select @@autocommit;


-- 제약조건 확인하기
		select * from information_schema.table_constraints
		where table_name in ('emp', 'dept', 'salgrade');
select * from emp;
		
-- unique : 유일한 값일 때
-- ename을 unique 제약조건 설정
		alter table emp add constraint emp_uq_ename unique(ename);
        insert into emp(empno, ename) values(8888, 'smith2');

-- 제약조건 삭제
		alter table emp drop constraint emp_uq_ename;
        
-- 특정 데이터만 등록되도록 제약조건을 설정
		alter table emp add constraint emp_ck_sal check (sal>500 and sal<8000);
select * from information_schema.table_constraints where table_name in ('emp', 'dept', 'salgrade');

		update emp set sal=7999 where ename='smith';
        alter table emp add constraint emp_ck_comm check (comm in(100,200,300,400));
        update emp set comm = 100;
select * from emp;
		update emp set comm=200 where sal>3000;
		update emp set comm=300 where sal<2000;			-- comm=500하면 안됌 위에서 comm in(500이없기 때문)
	
select * from emp;
select * from dept;

-- primary key 설정
-- dept테이블 deptno필드를

		alter table dept add constraint dept_pk_deptno primary key(deptno);

-- 제약조건 확인하기
		select * from information_schema.table_constraints
		where table_name in('emp','dept','salgrade');
    
		insert into dept values(50,'총무부','서울');		-- 숫자값이 겹치면 안들어감
select * from dept;

-- 외래키 설정하기
-- emp 테이블의 deptno(부서코드)는 dept테이블의 deptno(부서코드)를 참조한다. 

		alter table emp add constraint emp_fk_deptno foreign key (deptno)
		references dept(deptno);

select * from dept;
select * from emp;

-- emp에서 martin 50번부서로 이동
		update emp set deptno=50 where ename='martin';
        -- update emp set deptno=35 where ename='jones';	-- dept에 35란 부속키워드가없어서 에러뜸
																	
        delete from dept where deptno=20;					-- 제약조건 때문에 삭제불가, 참조된 데이터가 다른데서 사용중이면 삭제 불가
        delete from dept where deptno=50;		
        -- 
-- 제약조건 삭제
        alter table emp drop constraint emp_fk_deptno;
        alter table emp drop constraint emp_ck_sal;
        alter table emp drop constraint PRIMARY;
        
-- 제약조건 확인
select * from information_schema.table_constraints where table_name in('emp','dept','salgrade');
        
-- 제약조건 재생성 (이름이 같으면 안되서 삭제하고 재생성)
        alter table emp add constraint emp_fk_deptno foreign key (deptno)
        references dept(deptno) on delete cascade;
        
        delete from dept where deptno=20;					-- 20 삭제(사용안해서 삭제됌)
        select * from dept;
        select * from emp;									
        select avg(sal) from emp;
        select * from emp where sal>2016.66667;
        select * from emp where sal>(select avg(sal) from emp);		-- 단일행, select한 결과가 1개나오는 것
        
        
-- sql너무 많이 가지고 놀아서 재생성

delete from emp;
        
INSERT INTO EMP VALUES(7369, 'SMITH',  'CLERK', 7902, '1980-12-17', 800, NULL, 20);
INSERT INTO EMP VALUES(7499, 'ALLEN',  'SALESMAN',  7698, '1981-02-20', 1600,  300, 30);
INSERT INTO EMP VALUES(7521, 'WARD',   'SALESMAN',  7698, '1981-02-22', 1250,  500, 30);
INSERT INTO EMP VALUES(7566, 'JONES',  'MANAGER',   7839, '1981-04-02',  2975, NULL, 20);
INSERT INTO EMP VALUES(7654, 'MARTIN', 'SALESMAN',  7698,'1981-09-28', 1250, 1400, 30);
INSERT INTO EMP VALUES(7698, 'BLAKE',  'MANAGER',   7839,'1981-05-01', 2850, NULL, 30);
INSERT INTO EMP VALUES(7782, 'CLARK',  'MANAGER',   7839,'1981-06-09', 2450, NULL, 10);
INSERT INTO EMP VALUES(7788, 'SCOTT',  'ANALYST',   7566, '1982-12-09', 3000, NULL, 20);
INSERT INTO EMP VALUES(7839, 'KING',   'PRESIDENT', NULL, '1981-11-17', 5000, NULL, 10);
INSERT INTO EMP VALUES(7844, 'TURNER', 'SALESMAN',  7698, '1981-09-08',  1500,    0, 30);
INSERT INTO EMP VALUES(7876, 'ADAMS',  'CLERK', 7788, '1983-01-12', 1100, NULL, 20);
INSERT INTO EMP VALUES(7900, 'JAMES',  'CLERK',     7698, '1981-12-03',   950, NULL, 30);
INSERT INTO EMP VALUES(7902, 'FORD',   'ANALYST',   7566, '1981-12-03',  3000, NULL, 20);
INSERT INTO EMP VALUES(7934, 'MILLER', 'CLERK',     7782, '1982-01-23', 1300, NULL, 10);

select * from emp;
delete from dept where deptno=20;
select * from dept;
INSERT INTO DEPT VALUES(20,'인사부','경기도');

-- ------------------------------------설정재완료

use demo;
select * from emp;

-- 서브 쿼리
		select * from emp where sal>(select avg(sal) from emp);
        
-- emp테이블의 급여 jones의 급여보다 많이 받는 사원 중 부서가 30번인 사원을 선택하라. / 존스 1명이라 가능, 존스가 2명이면 이야기가 달라짐
		select * from emp where sal>(select sal from emp where ename = 'jones') and deptno=20;
        
-- manager 업무를 하는 사원의 평균 급여보다 작게 받는 사원을 선택하라
		-- 틀림
        select * from emp where sal>(select avg(sal) from emp)and job='manager';
        -- 맞음
        select * from emp where sal<(select avg(sal) from emp where job='manager');
       
		-- 평균값
		select avg(sal) from emp where job='manager';
        
        select * from emp where sal<(select avg(sal) from emp where job='manager');
        
-- [문제 1] 사원테이블에서 사원명, 입사일, 담당업무, 부서코드를 선택하되 'ADAMS'와 같은 업무를 하는
-- 사원이거나 'SCOTT'과 같은 부서인 사원을 선택하라
		select ename, hiredate, job, deptno from emp
        where job=(select job from emp where ename='adams')		-- adams 한명인 경우에 가능
        or deptno=(select deptno from emp where ename='scott');
        
-- [문제 2] 사원테이블에서 사원번호 7521인 사원과 업무가 같고 급여가 7934인 사원보다
-- 많은 급여를 받는 사원의 사번, 이름, 업무, 입사일자, 급여를 출력하라.
select * from emp;
		select empno, ename, job, hiredate, sal from emp
        where job = (select job from emp where empno=7521) and
        sal > (select sal from emp where empno =7934);
        
-- 사원 테이블에서 사원의 급여가 30번부서의 최소급여보다 많이 받는 부서를 선택하라.
		select deptno, min(sal) from emp group by deptno;
        
        select deptno, min(sal) from emp 
        group by deptno 
        having min(sal) > (select min(sal) from emp where deptno=30);
        
-- [문제 3] 사원테이블의 사원의 급여가 10번부서의 평균급여보다 많이 받는 업무를 하는 업무별 평균급여 구하라.
		select avg(sal) from emp where deptno =10;
        
        select job, avg(sal) from emp group by job 
        having avg(sal)>(select avg(sal) from emp where deptno=10);
        
-- 다중 행 서브 쿼리			in (5000, 3000, 2850)
		select max(sal) from emp group by deptno;

-- 부서별 최고 급여와 같은 급여를 받는 사원은
        select ename, job, deptno, sal from emp 
        where sal in(select max(sal) from emp group by deptno);		
        -- 위에서 max(sal)만들어줘서 이렇게 넣어도됌 
		select ename, job, deptno, sal from emp 
        where sal not in(select max(sal) from emp group by deptno);		

-- [문제 4] 업무별로 최대 급여를 받는  사원과 같은 급여를 받는 사원의 사원번호와 이름, 업무, 급여를 출력
select * from emp;
		select ename, job, sal from emp
        where sal in(select max(sal) from emp group by job);
        
        select ename, job, deptno, sal from emp
        where sal in(select max(sal) from emp group by job);
        
        select * from emp
        where deptno != 20
        and sal > any (select sal from emp where job ='salesman');
        -- any안쓰면 다중되서 오류남
        
-- [문제 5] 사원테이블의 사원 중 KING이 속한 부서의 사원보다 늦게 입사한 사원의 사원명, 업무,급여, 입사일 출력
		-- 내가
        select ename, job, sal, hiredate from emp
        where hiredate> any(select hiredate from emp where ename ='king');
        
        -- 슨상님
		-- 1981/06/09
        select hiredate from emp where deptno =(select deptno from emp where ename = 'king');
		select ename, job, sal, hiredate from emp
        where hiredate>any(select hiredate from emp
						where deptno =(select deptno from emp where ename='king'));
                        
-- all : 모든데이터가 만족하여야 한다.
		select * from emp
        where sal>all(select sal from emp where job = 'salesman')
        and deptno !=20;
        
select * from emp;
		select * from emp e
        where exists (select empno from emp where e.empno=mgr);
        
        
-- emp 테이블의 사원중 사원명, 담당업무, 입사일, 급여를 선택하되
-- scott이 속한 부서의 평균급여보다 많이 받는 사원과
-- manager 업무를 하는 사원을 선택하라.
-- 단, 사원명을 오름차순으로 정렬하여 출력하라.
        select ename, job, hiredate, sal from emp
        -- sacott이 속한 부서평균 급여보다 높아야해~, scott의 부서를 구해서 걔를 조건으로 줘야함
        where sal > (select avg(sal) from emp 								-- scott부서평균보다 높은 급여
        where deptno = (select deptno from emp where ename = 'scott'))		-- scott의 부서구하기
        or job = 'manager' order by ename asc;
        -- 일부동작보기
        select avg(sal) from emp where deptno = (select deptno from emp where ename = 'scott');

-- 30번 부서의 보너스를 받는 사원은 (급여, 부서코드)?
		select sal, deptno from emp
        where deptno=30 and comm is not null;
		-- 다중열 사용해서 풀기
		select * from emp where (sal, deptno) 
        in (select sal, deptno from emp where deptno=30 and comm is not null);
        
-- [문제] 업무별로 최소 급여를 받는 사원의 사번, 이름, 업무, 부서번호를 출력하세요. 단 업무별로 오름차순 정렬
		-- 내가
        select empno, ename, job, deptno from emp
        where (min(sal)<=(select job from emp job))
        order by job asc;
        
        -- 선생님
		-- 1. select * from emp order by job;
       select * from emp order by job;
       
        -- 2. 업무별 최저 급여 (한명이 아니라 여러 명)
        select job, min(sal) from emp group by job;
        
        -- 문장전체
		select empno, ename, job, deptno from emp
        where (job, sal) in (select job, min(sal) from emp group by job)
        order by job asc;
        
        select job, min(sal) from emp group by job;
        
-- from 절에 서브쿼리 문 사용하기
		select * from (select empno, ename, sal, hiredate from emp) e;
        
        select empno, ename, sal, hiredate from emp;
        
        select e.ename, e.sal
        from (select empno, ename, sal, hiredate from emp where deptno=30) e;
        
        select empno, ename, sal, hiredate from emp;
        
-- 사원번호 같은 값이 들어가나
		insert into emp(empno, ename, deptno) values(7788,'abcd',30);			-- 똑같은 사원 번호 2개발생
																				-- primary 처리해주기
select * from emp;
		-- 2. 우선지워준다
        delete from emp where ename = 'abcd';
        -- 3. 제약 조건 설정한다. : empno primary key
        alter table emp add constraint emp_pk_empno
        primary key(empno);
        -- 4. 다시 위에가서 넣어보면 7788 안들어가고 에러난다.
