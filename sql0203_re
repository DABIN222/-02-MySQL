-- select
-- from
-- where
-- order by
-- 순으로~

-- 1. 사용할 파일 시작해주기
use demo;

-- 2. database와 table 확인하기
show databases;
show tables;

-- 3. table의 목록에 있는 자료 확인하기
select * from emp;
select * from dept;
select * from salgrade;

desc emp;

select empno, ename from emp;


-- 4. 쿼리문 작성법
-- select
-- from
-- where
-- order by

-- 5. 연산자 사용해보기

	-- 5.1 IN, OUT IN 연산자
		select empno, ename from emp where empno in(7369,7499);
		select empno, ename from emp where empno not in(7369,7499);
        
	-- 5.2 BETWEEN 연산자 (<=,=>)
		select empno, ename from emp where empno between 7700 and 7900;
	
    -- 5.3 LIKE 연산자
	-- %: 여러개의 문자열을 나타냄
    -- _: 단 하나의 문자를 나타냄
    -- ESCAPE: 와일드 카드 문자를 일반 문자처럼 사용하고 싶은 경우
		-- %
        select * from emp where ename like 'A%';		-- 컬럼이 A로 시작하는 데이터
        select * from emp where ename like '%D';		-- 컬럼이 D로 끝나는 데이터
        select * from emp where ename like '%AR%';		-- 컬럼에 AR문자가 들어간 데이터
        select * from emp where ename like '%A%K%';		-- 컬럼에 A와 K문자가 들어간 데이터
        select * from emp where ename like '_A%';		-- 컬럼에 A문자가 두 번째에 위치한 데이터
        
        select empno, ename from emp where ename like '%K%';
        select empno, ename from emp where ename like '_I%';
        select empno, ename, hiredate from emp where hiredate like '_____12%';
        
	-- 5.4 ORDER BY(ASC[오름차순], DESC[내림차순])
		select * from emp;
        select empno, ename from emp where empno <= 7700 and ename like '%A%' order by empno asc;
        select empno, ename from emp where empno <= 7700 and ename like '%A%' order by empno;
        select empno, ename from emp where empno <= 7700 and ename like '%A%' order by empno desc;
        
        
	-- 연습문제
    
    -- 4. emp테이블의 레코드중 사원명에 'A'가 들어가고 고용일이 1981~1982년 사이인 사원을 이름 오름차순으로 선택하라.
        select * from emp
        where ename like '%K%' and 
			hiredate between '1981-01-01' and '1982-12-31'
        order by ename asc;
        

        
-- 6. 내장함수(1) [숫자함수]
	-- ABS(n) : 절대값을 계산하는 함수
		select abs(-10);
        
	-- CEIL(n), CEILING(n) : 올림
		select ceil(10.1);		-- 11
        select ceiling(10.1);	-- 11
        select ceil(-10.1);		-- (-10)
        
	-- FLOOR(n) : 내림
		select floor(10.1);		-- 10
		select floor(-10.1);	-- (-11)
        
	-- MOD(m,n), %, MOD : 나머지
		select mod(14,3);
        select 14%3;
        select 14 mod 3;
        
	-- RAND : 0~1 사이의 난수, ln함수는 자연로그 값을 변환
		select rand(), floor(1 + (rand()*6));
        select rand(), ceil(rand()*6);
        
	-- POW(m,n), SQRT(n) : 거듭제곱, 제곱근으로 m의 n승 값을 계산
		select pow(2,4);
        
	-- ROUND(n, [m]) : n값의 반올림을 하는 함수로 m은 소숫점 아래 자리수
		select round(123.456, 1);
		select round(123.456, 2);
		select round(163.456, -2);		-- y축 기준으로 왼쪽으로(-) 가서 반올림하니까 100임

	-- TRUNCATE(n,m) : n값을 m 소숫점 자리로 반내림한 값 반환 (소수이하자리 버림)
		select truncate(123.456, 2);
        select truncate(163.456, -2);

	-- SIGN(n) : 숫자가 양수이면 1, 음수이면 -1을 반환, 0은 0반환
		select sign(3);
        select sign(-3);
        select sign(0);
        
	-- FORMAT(숫자, 소숫점 자리수) : 숫자를 소숫점 아래 자리수 까지만 표현, 그리고 1000단위마다 콤마 표시
		select format(123.345 , 2);
		select format(123456.1234 , 2);
        
	-- CONV(숫자, 기존진수, 변환진수) : 진수 변환할 때
		select conv(20, 10, 2);
        
	-- BIN(), HEX(), OCT() : 2진수, 16진수, 8진수 값 구하기
		select bin(31);		-- 11111
		select hex(31);		-- 1F
		select oct(31);		-- 37
    
    
-- 7. 내장함수(2) [문자열 처리함수], Character functions
	
    -- ASCII(s)	: ascii는 문자의 아스키 코드 값을 반환
    select ascii('A') name;		-- 65
    
    -- char(65)
    select char(65) name;		-- A
    
    -- BIT_LENGTH('TEST')	-	BIT 크기
    -- CHAR_LENGTH('TEST')	-	문자수
    -- LENGTH('TEST')		-	할당된 BYTE 크기
    select bit_length('abc'), char_length('abc'), length('abc');		-- 24	3	3
    select bit_length(123), char_length(123), length(123);				-- 24	3	3
    select bit_length('가나다'), char_length('가나다'), length('가나다');	-- 72	3	9 (UTP-8 코드에서 한글은 문자당 3byte)
    
    -- CONCAT (char1, char2, ...) 				: 문자열을 이을 때 사용
    -- CONCT_WS (구분자, char1, char2, ...)		: 구분자(,-./ 등 )와 함께 문자열을 이을 때 사용
    select concat(2020,01,01);					-- int값으로 주면 0101이 안됌
    select concat('2020','01','01');			-- 20200101
    select concat_ws('/','2020','01','01');		-- 2020/01/01
    
    -- ELT (위치, 문자열, 문자열, ...)				: 위치 번째의 문자를 반환
    -- FIELD (찾을문자열, 문자열, 문자열, ...)		: 찾을 문자열의 위치를 찾아서 있으면 위치를, 없으면 0 반환
    -- FIND_IN_SET (찾을문자열, '문자,문자,문자...')	: 찾을 문자열을 문자열 리스트에서 찾아서 반환 (문자열은 공백없이 ,로 구분할 것!!)
    -- INSTR (기준문자열, 부분문자열)					: 기준 문자열에서 부분 문자열을 찾아서 그 시작 위치를 반환
    -- LOCATE (부분문자열, 기준문자열)				: INSTR과 파라미터 순서 반대
    select elt(2,'a','b','c');					-- b	(2번째로, a,b,c)이므로 b
    select field('b','a','b','c');				-- 2	(b찾을게, 1,2,3)이므로 b=2
    select find_in_set ('c','a,b,c');			-- 3	(c찾을게, '1,2,3')이므로 c=3
    select instr('abcd','b');					-- 2	(기준 abcd, 부분b 찾기)이므로 2
    select locate('c','abcd');					-- 3	(부분c, 기준'abcd'에서 c는 3) 3
    
	-- INSERT (char1, N, M, char2)				: 기준문자열(char1)에서 N번째부터 M번째까지 삽입할문자(char2)로 변경
    select insert('가나다라마바사',2,5,'@');		-- 가@사	(가나다라마바사 중 길이 5인 나다라마바 까지 '@'로 퉁치기~)
    select insert('가나다라마',2,3,'@@@');			-- 가@@@마 (가나다라마 중 2번째부터 길이 3인 나다라 까지 '@@@'로 퉁치기~)
    
    -- REVERSE (문자열)							: 문자열 순서 거꾸로
    select reverse('김다빈');						-- 빈다김
    
    -- LEFT (문자열, n)							: 문자열의 왼쪽부터 n길이 만큼 반환
    -- RIGHT (문자열, n)							: 문자열의 오른쪽부터 n길이 만큼 반환
    select left('김다빈최고',2);					-- 김다	왼쪽부터 2만큼, 김다
    select right('김다빈최고',2);					-- 최고	오른쪽부터 2만큼, 최고
	
    -- LCASE 									: 대문자를 소문자로 변경한 후 반환
    -- UCASE									: 소문자를 대문자로 변경한 후 반환
    select lcase('aBcDe');						-- abcde	대문자->소문자
    select ucase('aBcDe');						-- ABCDE	소문자->대문자
    
    -- LPAD (char1, n, char2)					: 왼쪽에 문자열을 끼어넣는 역할
	-- 											: lpad('문자열', 반환되는 문자열 전체길이 n, 바꿀 문자열)
	-- 											: char1 > n, char2를 n개 문자열 만큼 반환
    -- RPAD (char1, n, char2)					: 오른쪽에 문자열을 끼어넣는 역할
	select lpad('kimdabin', 3, '*') name; 		-- kim
	select lpad('kimdabin', 13, '*') name; 		-- *****kimdabin
    select rpad('kimdabin', 3, '*') name;		-- kim
    select rpad('kimdabin', 13, '*') name; 		-- kimdabin*****
    
    -- SUBSTRING (char, m, n)					: 시작 위치부터 길이만큼 문자를 반환
    select substring('kimdabin', 2, 4) name;	-- imda		(kimdabin 2번째인 i부터 4길이만큼만 반환)
    
    -- SUBSTRING_INDEX (문자열, 구분자, 횟수)
    select substring_index('kim/da/bin/good','/',3) name;		-- kim/da/bin	(구분자 3번째까지)
	select substring_index('kim/da/bin/good','/',-3) name;		-- da/bin/good	(구분자 -3번째 뒤에서 부터시작해서 잘라버리기)
    
    select * from emp;
    
-- Q. 이름을 글자길이의 50%만 출력하고 나머지 문자는 '*'로 표기
    select rpad(substring(ename, 1, char_length(ename)/2), char_length(ename),'*') from emp;
    -- rpad(	substring(ename, 시작위치(1)부터, ename길이/2 만큼)반환	, ename길이만큼 '*'로  ) emp에서~출력하기
    select rpad(substring(ename, 1, char_length(ename)/2), char_length(ename),'*') as 'ename' from emp;
    -- 																칼럼명 정해주기 as "별칭이름" 으로 사용가능
	-- Q. 이름을 글자길이의 60%만 출력하고 나머지 문자는 '*'로 표기    
		select rpad(substring(ename, 1, char_length(ename)*0.6),char_length(ename),'*')from emp;
    
    
    -- REPEAT (문자열, 횟수)						: 문자열의 횟수만큼 반복
    select repeat('da', 2);						-- dada
    
    -- REPLACE (char1, str1, str2)				: 문자열의 특정 문자를 다른 문자로 변환
    select replace('abcde','b','B');			-- aBcde
    select replace('abcde','b','B')"changes";	-- aBcde (colrumn 값 : change)
    
    -- LTRIM, RTRIM, TRIM 						: 특정 문자 제거, LTRIM/RTRIM 은 문자열의 왼쪽/오른쪽 공백을 제거
    -- 											: TRIM은 양쪽의 공백 모두제거
    select ltrim('  abc');
	select ltrim('abc  ');
    select rtrim('abc  ');
	select rtrim('  abc');
    
    
